name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        configuration: ['Debug', 'Release']
    env:
      dotnet-version: 7.0.x

    steps:
    - uses: actions/checkout@v3
    - name: Set up .NET ${{env.dotnet-version}}
      uses: actions/setup-dotnet@v3
      id: setup
      with:
        dotnet-version: ${{env.dotnet-version}}
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
    - name: Create global.json to force use of .NET SDK ${{steps.setup.outputs.dotnet-version}})
      run: echo '{"sdk":{"version":"${{steps.setup.outputs.dotnet-version}}"}}' > ./global.json
    - name: Run Build Script (Configuration: ${{matrix.configuration}})
      run: pwsh ./build-package.ps1 -WithBinLog -Configuration ${{matrix.configuration}}
    - name: Store Logs for Failed Build
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: MSBuild Log Files
        path: msbuild.*.binlog
    - name: Store NuGet Package
      uses: actions/upload-artifact@v3
      with:
        name: NuGet Package
        path: ./**/bin/Release/*.nupkg
    - name: Show current ref
      if: matrix.configuration == 'Release'
      run: 'echo github.ref: ${{github.ref}}'
    - name: Publish NuGet Package
      if: startsWith(github.ref, 'refs/tags/v')
      run: dotnet nuget push */bin/Release/*.nupkg
